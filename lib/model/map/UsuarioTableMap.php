<?php


/**
 * This class defines the structure of the 'usuario' table.
 *
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * 07/18/13 22:30:39
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class UsuarioTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.UsuarioTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('usuario');
		$this->setPhpName('Usuario');
		$this->setClassname('Usuario');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(true);
		// columns
		$this->addPrimaryKey('USU_CODIGO', 'UsuCodigo', 'INTEGER', true, 11, null);
		$this->addForeignKey('USU_PER_CODIGO', 'UsuPerCodigo', 'INTEGER', 'perfil', 'PER_CODIGO', false, 11, null);
		$this->addColumn('USU_LOGIN', 'UsuLogin', 'VARCHAR', false, 200, null);
		$this->addColumn('USU_PASSWORD', 'UsuPassword', 'VARCHAR', false, 200, null);
		$this->addColumn('USU_HABILITADO', 'UsuHabilitado', 'SMALLINT', false, 6, null);
		$this->addColumn('USU_FECHA_REGISTRO_SISTEMA', 'UsuFechaRegistroSistema', 'TIMESTAMP', false, null, null);
		$this->addColumn('USU_FECHA_ACTUALIZACION', 'UsuFechaActualizacion', 'TIMESTAMP', false, null, null);
		$this->addColumn('USU_CAUSA_ACTUALIZACION', 'UsuCausaActualizacion', 'VARCHAR', false, 250, null);
		$this->addColumn('USU_CREA', 'UsuCrea', 'VARCHAR', false, 20, null);
		$this->addColumn('USU_ACTUALIZA', 'UsuActualiza', 'VARCHAR', false, 20, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('Perfil', 'Perfil', RelationMap::MANY_TO_ONE, array('usu_per_codigo' => 'per_codigo', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('CategoriaEquipoRelatedByCatUsuCrea', 'CategoriaEquipo', RelationMap::ONE_TO_MANY, array('usu_codigo' => 'cat_usu_crea', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('CategoriaEquipoRelatedByCatUsuActualiza', 'CategoriaEquipo', RelationMap::ONE_TO_MANY, array('usu_codigo' => 'cat_usu_actualiza', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('CategoriaEventoRelatedByCatUsuCrea', 'CategoriaEvento', RelationMap::ONE_TO_MANY, array('usu_codigo' => 'cat_usu_crea', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('CategoriaEventoRelatedByCatUsuActualiza', 'CategoriaEvento', RelationMap::ONE_TO_MANY, array('usu_codigo' => 'cat_usu_actualiza', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('EmpleadoRelatedByEmplUsuCodigo', 'Empleado', RelationMap::ONE_TO_MANY, array('usu_codigo' => 'empl_usu_codigo', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('EmpleadoRelatedByEmplUsuCrea', 'Empleado', RelationMap::ONE_TO_MANY, array('usu_codigo' => 'empl_usu_crea', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('EmpleadoRelatedByEmplUsuActualiza', 'Empleado', RelationMap::ONE_TO_MANY, array('usu_codigo' => 'empl_usu_actualiza', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('EmpresaRelatedByEmpUsuCrea', 'Empresa', RelationMap::ONE_TO_MANY, array('usu_codigo' => 'emp_usu_crea', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('EmpresaRelatedByEmpUsuActualiza', 'Empresa', RelationMap::ONE_TO_MANY, array('usu_codigo' => 'emp_usu_actualiza', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('EstadoRelatedByEstUsuCrea', 'Estado', RelationMap::ONE_TO_MANY, array('usu_codigo' => 'est_usu_crea', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('EstadoRelatedByEstUsuActualiza', 'Estado', RelationMap::ONE_TO_MANY, array('usu_codigo' => 'est_usu_actualiza', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('EventoRelatedByEveUsuCrea', 'Evento', RelationMap::ONE_TO_MANY, array('usu_codigo' => 'eve_usu_crea', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('EventoRelatedByEveUsuActualiza', 'Evento', RelationMap::ONE_TO_MANY, array('usu_codigo' => 'eve_usu_actualiza', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('EventoEnRegistroRelatedByEvrgUsuCrea', 'EventoEnRegistro', RelationMap::ONE_TO_MANY, array('usu_codigo' => 'evrg_usu_crea', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('EventoEnRegistroRelatedByEvrgUsuActualiza', 'EventoEnRegistro', RelationMap::ONE_TO_MANY, array('usu_codigo' => 'evrg_usu_actualiza', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('EventoPorCategoria', 'EventoPorCategoria', RelationMap::ONE_TO_MANY, array('usu_codigo' => 'evca_usu_crea', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('IndicadorRelatedByIndUsuCrea', 'Indicador', RelationMap::ONE_TO_MANY, array('usu_codigo' => 'ind_usu_crea', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('IndicadorRelatedByIndUsuActualiza', 'Indicador', RelationMap::ONE_TO_MANY, array('usu_codigo' => 'ind_usu_actualiza', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('MaquinaRelatedByMaqUsuCrea', 'Maquina', RelationMap::ONE_TO_MANY, array('usu_codigo' => 'maq_usu_crea', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('MaquinaRelatedByMaqUsuActualiza', 'Maquina', RelationMap::ONE_TO_MANY, array('usu_codigo' => 'maq_usu_actualiza', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('MetaAnualXIndicadorRelatedByMeaUsuCrea', 'MetaAnualXIndicador', RelationMap::ONE_TO_MANY, array('usu_codigo' => 'mea_usu_crea', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('MetaAnualXIndicadorRelatedByMeaUsuActualiza', 'MetaAnualXIndicador', RelationMap::ONE_TO_MANY, array('usu_codigo' => 'mea_usu_actualiza', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('MetodoRelatedByMetUsuCrea', 'Metodo', RelationMap::ONE_TO_MANY, array('usu_codigo' => 'met_usu_crea', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('MetodoRelatedByMetUsuActualiza', 'Metodo', RelationMap::ONE_TO_MANY, array('usu_codigo' => 'met_usu_actualiza', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('RegistroModificacion', 'RegistroModificacion', RelationMap::ONE_TO_MANY, array('usu_codigo' => 'rem_usu_codigo', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('RegistroUsoMaquinaRelatedByRumUsuCodigo', 'RegistroUsoMaquina', RelationMap::ONE_TO_MANY, array('usu_codigo' => 'rum_usu_codigo', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('RegistroUsoMaquinaRelatedByRumUsuCodigoElimino', 'RegistroUsoMaquina', RelationMap::ONE_TO_MANY, array('usu_codigo' => 'rum_usu_codigo_elimino', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('TipoIdentificacionRelatedByTidUsuCrea', 'TipoIdentificacion', RelationMap::ONE_TO_MANY, array('usu_codigo' => 'tid_usu_crea', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('TipoIdentificacionRelatedByTidUsuActualiza', 'TipoIdentificacion', RelationMap::ONE_TO_MANY, array('usu_codigo' => 'tid_usu_actualiza', ), 'RESTRICT', 'RESTRICT');
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
		);
	} // getBehaviors()

} // UsuarioTableMap
